// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  firstName     String
  lastName      String
  role          UserRole
  passwordHash  String
  enrollments   Enrollment[]
  submissions   Submission[]
  gradesGiven   Grade[]       @relation("GradesGiven")
  announcements Announcement[]
}

model Course {
  id            String         @id @default(cuid())
  title         String
  description   String
  enrollments   Enrollment[]
  modules       Module[]
  assignments   Assignment[]
  announcements Announcement[]
}

model Module {
  id            String        @id @default(cuid())
  courseId      String
  course        Course        @relation(fields: [courseId], references: [id])
  title         String
  content       String
}

model Enrollment {
  id            String        @id @default(cuid())
  courseId      String
  course        Course        @relation(fields: [courseId], references: [id])
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  term          String
  role          EnrollmentRole
}

model Assignment {
  id            String        @id @default(cuid())
  courseId      String
  course        Course        @relation(fields: [courseId], references: [id])
  title         String
  description   String
  dueDate       DateTime
  submissions     Submission[]
}

model Submission {
  id              String      @id @default(cuid())
  assignmentId    String
  assignment      Assignment  @relation(fields: [assignmentId], references: [id])
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  submissionDate  DateTime
  content         String
  grade           Grade?      @relation("SubmissionGrade")
}

model Grade {
  id              String      @id @default(cuid())
  submissionId    String      @unique
  submission      Submission  @relation("SubmissionGrade", fields: [submissionId], references: [id])
  graderId        String
  grader          User        @relation("GradesGiven", fields: [graderId], references: [id])
  feedback        String
  gradedDate      DateTime
}

model Announcement {
  id            String        @id @default(cuid())
  courseId      String
  course        Course        @relation(fields: [courseId], references: [id])
  authorId      String
  author        User          @relation(fields: [authorId], references: [id])
  title         String
  content       String
  postedDate    DateTime
}

enum UserRole {
  USER 
  ADMIN
}
enum EnrollmentRole {
  STUDENT
  INSTRUCTOR
}
